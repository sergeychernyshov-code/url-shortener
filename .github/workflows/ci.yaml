name: PR Deploy - URL Shortener Dev

on:
  pull_request:
    branches:
      - main

jobs:
  pr-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-central-1
      TF_WORKSPACE: url-shortener-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Init Go module (if missing)
        run: |
          cd backend
          if [ ! -f go.mod ]; then
            go mod init github.com/yourusername/url-shortener/backend
          fi
          go mod tidy

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Build Go executable
        run: |
          cd backend
          GOOS=linux GOARCH=amd64 go build -o main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t url-shortener-lambda backend/

      - name: Tag and Push Docker image
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          IMAGE_TAG=pr-${PR_NUMBER}
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/url-shortener-lambda:${IMAGE_TAG}"
          docker tag url-shortener-lambda $IMAGE_URI
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Select Workspace
        run: |
          cd terraform
          terraform workspace select $TF_WORKSPACE || terraform workspace new $TF_WORKSPACE

      - name: Terraform Apply (Dev)
        run: |
          cd terraform
          terraform apply -auto-approve -var "image_uri=${{ env.IMAGE_URI }}" -var "environment=dev"
